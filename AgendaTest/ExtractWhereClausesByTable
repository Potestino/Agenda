-- ============================================
-- üöß DDL Changes Section (Schema Updates)
-- ============================================
-- ‚ö†Ô∏è IMPORTANT: DDL changes (CREATE/ALTER/DROP) auto-commit in MySQL.
-- They cannot be rolled back with transactions. 
-- For each DDL statement, provide a matching rollback statement manually.

-- Example DDL changes (irreversible, must script rollback separately):
-- ALTER TABLE MarketSettings ADD COLUMN new_col VARCHAR(50);
-- CREATE TABLE Audit_Log (id INT PRIMARY KEY, message VARCHAR(255));



-- ============================================
-- ‚úÖ DML Changes Section (Data Updates, Transaction-Safe)
-- ============================================
DELIMITER $$

DROP PROCEDURE IF EXISTS deploy_changes $$
CREATE PROCEDURE deploy_changes()
BEGIN
    -- Error handler: rollback if any statement fails
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
        SELECT '‚ùå Error occurred. All data changes rolled back.' AS status;
    END;

    START TRANSACTION;

    -- ========================================
    -- Place DML changes here (safe, rollback works)
    -- ========================================
    -- Example statements:
    -- UPDATE MarketSettings SET setting_name = 'UpdatedValue' WHERE id = 1;
    -- INSERT INTO MarketSettings (id, setting_name) VALUES (999, 'TestInsert');

    COMMIT;
    SELECT '‚úÖ Data changes committed successfully.' AS status;
END $$

DELIMITER ;

-- Run the procedure
CALL deploy_changes();
