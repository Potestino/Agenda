private List<string> SplitConditionsSafely(string clause)
{
    var conditions = new List<string>();
    var buffer = new StringBuilder();
    int parenDepth = 0;
    bool inQuotes = false;

    for (int i = 0; i < clause.Length; i++)
    {
        char c = clause[i];

        if (c == '\'') inQuotes = !inQuotes;
        if (!inQuotes)
        {
            if (c == '(') parenDepth++;
            else if (c == ')') parenDepth--;
        }

        // Detect logical operator at boundary
        if (!inQuotes && parenDepth == 0 &&
            (clause.Substring(i).StartsWith("AND ", StringComparison.OrdinalIgnoreCase) ||
             clause.Substring(i).StartsWith("OR ", StringComparison.OrdinalIgnoreCase)))
        {
            if (buffer.Length > 0)
            {
                conditions.Add(buffer.ToString().Trim());
                buffer.Clear();
            }

            // Skip over "AND"/"OR" (3 chars) + space (1 char)
            i += 3;
            continue;
        }

        buffer.Append(c);
    }

    if (buffer.Length > 0)
        conditions.Add(buffer.ToString().Trim());

    return conditions;
}
